Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body
    2         | function_header body
    3         | error ';'

    4 function_header: FUNCTION IDENTIFIER parameters_o RETURNS type ';'
    5                | error ';'

    6 optional_variable: optional_variable variable
    7                  | variable
    8                  | error ';'

    9 variable: IDENTIFIER ':' type IS statement_

   10 parameters_o: optional_params
   11             | ε

   12 optional_params: optional_params ',' parameter
   13                | parameter

   14 parameter: IDENTIFIER ':' type

   15 type: INTEGER
   16     | REAL
   17     | BOOLEAN

   18 statement_: statement ';'
   19           | error ';'

   20 statement: expression
   21          | REDUCE operator reductions ENDREDUCE
   22          | IF expression THEN statement_ ELSE statement_ ENDIF
   23          | CASE expression IS case_optional OTHERS ARROW statement_ ENDCASE

   24 case_optional: case_optional case
   25              | case
   26              | error ';'

   27 case: WHEN INT_LITERAL ARROW statement_

   28 body: BEGIN_ statement_ END ';'

   29 operator: ADDOP
   30         | MULOP
   31         | ε

   32 reductions: reductions statement_
   33           | ε

   34 expression: expression OROP logical_or
   35           | logical_or

   36 logical_or: logical_or ANDOP relation
   37           | relation

   38 relation: relation RELOP term
   39         | term

   40 term: term ADDOP factor
   41     | factor

   42 factor: factor MULOP exponent
   43       | factor REMOP exponent
   44       | exponent

   45 exponent: not_operator
   46         | not_operator EXPOP exponent

   47 not_operator: NOTOP not_operator
   48             | primary

   49 primary: '(' expression ')'
   50        | IDENTIFIER
   51        | INT_LITERAL
   52        | REAL_LITERAL
   53        | BOOL_LITERAL


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 49
    ')' (41) 49
    ',' (44) 12
    ':' (58) 9 14
    ';' (59) 3 4 5 8 18 19 26 28
    error (256) 3 5 8 19 26
    IDENTIFIER <iden> (258) 4 9 14 50
    INT_LITERAL <type> (259) 27 51
    NOTOP <type> (260) 47
    REAL_LITERAL <type> (261) 52
    BOOL_LITERAL <type> (262) 53
    ADDOP (263) 29 40
    MULOP (264) 30 42
    RELOP (265) 38
    ANDOP (266) 36
    BEGIN_ (267) 28
    BOOLEAN (268) 17
    END (269) 28
    ENDREDUCE (270) 21
    FUNCTION (271) 4
    INTEGER (272) 15
    IS (273) 9 23
    REDUCE (274) 21
    RETURNS (275) 4
    ARROW (276) 23 27
    CASE (277) 23
    ENDCASE (278) 23
    IF (279) 22
    ENDIF (280) 22
    ELSE (281) 22
    THEN (282) 22
    WHEN (283) 27
    OTHERS (284) 23
    REAL (285) 16
    OROP (286) 34
    REMOP (287) 43
    EXPOP (288) 46


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1 2 3
        on right: 0
    function_header <type> (41)
        on left: 4 5
        on right: 1 2
    optional_variable (42)
        on left: 6 7 8
        on right: 1 6
    variable <type> (43)
        on left: 9
        on right: 6 7
    parameters_o (44)
        on left: 10 11
        on right: 4
    optional_params (45)
        on left: 12 13
        on right: 10 12
    parameter (46)
        on left: 14
        on right: 12 13
    type <type> (47)
        on left: 15 16 17
        on right: 4 9 14
    statement_ <type> (48)
        on left: 18 19
        on right: 9 22 23 27 28 32
    statement <type> (49)
        on left: 20 21 22 23
        on right: 18
    case_optional <type> (50)
        on left: 24 25 26
        on right: 23 24
    case <type> (51)
        on left: 27
        on right: 24 25
    body <type> (52)
        on left: 28
        on right: 1 2
    operator (53)
        on left: 29 30 31
        on right: 21
    reductions <type> (54)
        on left: 32 33
        on right: 21 32
    expression <type> (55)
        on left: 34 35
        on right: 20 22 23 34 49
    logical_or <type> (56)
        on left: 36 37
        on right: 34 35 36
    relation <type> (57)
        on left: 38 39
        on right: 36 37 38
    term <type> (58)
        on left: 40 41
        on right: 38 39 40
    factor <type> (59)
        on left: 42 43 44
        on right: 40 41 42 43
    exponent <type> (60)
        on left: 45 46
        on right: 42 43 44 46
    not_operator <type> (61)
        on left: 47 48
        on right: 45 46 47
    primary <type> (62)
        on left: 49 50 51 52 53
        on right: 48


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function: error • ';'
    5 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    4 function_header: FUNCTION • IDENTIFIER parameters_o RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body
    2         | function_header • body

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    BEGIN_      shift, and go to state 10

    optional_variable  go to state 11
    variable           go to state 12
    body               go to state 13


State 5

    3 function: error ';' •
    5 function_header: error ';' •

    $end      reduce using rule 3 (function)
    $default  reduce using rule 5 (function_header)


State 6

    4 function_header: FUNCTION IDENTIFIER • parameters_o RETURNS type ';'

    IDENTIFIER  shift, and go to state 14

    $default  reduce using rule 11 (parameters_o)

    parameters_o     go to state 15
    optional_params  go to state 16
    parameter        go to state 17


State 7

    0 $accept: function $end •

    $default  accept


State 8

    8 optional_variable: error • ';'

    ';'  shift, and go to state 18


State 9

    9 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 19


State 10

   28 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_    go to state 30
    statement     go to state 31
    expression    go to state 32
    logical_or    go to state 33
    relation      go to state 34
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 11

    1 function: function_header optional_variable • body
    6 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 9
    BEGIN_      shift, and go to state 10

    variable  go to state 40
    body      go to state 41


State 12

    7 optional_variable: variable •

    $default  reduce using rule 7 (optional_variable)


State 13

    2 function: function_header body •

    $default  reduce using rule 2 (function)


State 14

   14 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 42


State 15

    4 function_header: FUNCTION IDENTIFIER parameters_o • RETURNS type ';'

    RETURNS  shift, and go to state 43


State 16

   10 parameters_o: optional_params •
   12 optional_params: optional_params • ',' parameter

    ','  shift, and go to state 44

    $default  reduce using rule 10 (parameters_o)


State 17

   13 optional_params: parameter •

    $default  reduce using rule 13 (optional_params)


State 18

    8 optional_variable: error ';' •

    $default  reduce using rule 8 (optional_variable)


State 19

    9 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 45
    INTEGER  shift, and go to state 46
    REAL     shift, and go to state 47

    type  go to state 48


State 20

   19 statement_: error • ';'

    ';'  shift, and go to state 49


State 21

   50 primary: IDENTIFIER •

    $default  reduce using rule 50 (primary)


State 22

   51 primary: INT_LITERAL •

    $default  reduce using rule 51 (primary)


State 23

   47 not_operator: NOTOP • not_operator

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 29

    not_operator  go to state 50
    primary       go to state 39


State 24

   52 primary: REAL_LITERAL •

    $default  reduce using rule 52 (primary)


State 25

   53 primary: BOOL_LITERAL •

    $default  reduce using rule 53 (primary)


State 26

   21 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 51
    MULOP  shift, and go to state 52

    $default  reduce using rule 31 (operator)

    operator  go to state 53


State 27

   23 statement: CASE • expression IS case_optional OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 29

    expression    go to state 54
    logical_or    go to state 33
    relation      go to state 34
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 28

   22 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 29

    expression    go to state 55
    logical_or    go to state 33
    relation      go to state 34
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 29

   49 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 29

    expression    go to state 56
    logical_or    go to state 33
    relation      go to state 34
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 30

   28 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 57


State 31

   18 statement_: statement • ';'

    ';'  shift, and go to state 58


State 32

   20 statement: expression •
   34 expression: expression • OROP logical_or

    OROP  shift, and go to state 59

    $default  reduce using rule 20 (statement)


State 33

   35 expression: logical_or •
   36 logical_or: logical_or • ANDOP relation

    ANDOP  shift, and go to state 60

    $default  reduce using rule 35 (expression)


State 34

   37 logical_or: relation •
   38 relation: relation • RELOP term

    RELOP  shift, and go to state 61

    $default  reduce using rule 37 (logical_or)


State 35

   39 relation: term •
   40 term: term • ADDOP factor

    ADDOP  shift, and go to state 62

    $default  reduce using rule 39 (relation)


State 36

   41 term: factor •
   42 factor: factor • MULOP exponent
   43       | factor • REMOP exponent

    MULOP  shift, and go to state 63
    REMOP  shift, and go to state 64

    $default  reduce using rule 41 (term)


State 37

   44 factor: exponent •

    $default  reduce using rule 44 (factor)


State 38

   45 exponent: not_operator •
   46         | not_operator • EXPOP exponent

    EXPOP  shift, and go to state 65

    $default  reduce using rule 45 (exponent)


State 39

   48 not_operator: primary •

    $default  reduce using rule 48 (not_operator)


State 40

    6 optional_variable: optional_variable variable •

    $default  reduce using rule 6 (optional_variable)


State 41

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 42

   14 parameter: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 45
    INTEGER  shift, and go to state 46
    REAL     shift, and go to state 47

    type  go to state 66


State 43

    4 function_header: FUNCTION IDENTIFIER parameters_o RETURNS • type ';'

    BOOLEAN  shift, and go to state 45
    INTEGER  shift, and go to state 46
    REAL     shift, and go to state 47

    type  go to state 67


State 44

   12 optional_params: optional_params ',' • parameter

    IDENTIFIER  shift, and go to state 14

    parameter  go to state 68


State 45

   17 type: BOOLEAN •

    $default  reduce using rule 17 (type)


State 46

   15 type: INTEGER •

    $default  reduce using rule 15 (type)


State 47

   16 type: REAL •

    $default  reduce using rule 16 (type)


State 48

    9 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 69


State 49

   19 statement_: error ';' •

    $default  reduce using rule 19 (statement_)


State 50

   47 not_operator: NOTOP not_operator •

    $default  reduce using rule 47 (not_operator)


State 51

   29 operator: ADDOP •

    $default  reduce using rule 29 (operator)


State 52

   30 operator: MULOP •

    $default  reduce using rule 30 (operator)


State 53

   21 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 33 (reductions)

    reductions  go to state 70


State 54

   23 statement: CASE expression • IS case_optional OTHERS ARROW statement_ ENDCASE
   34 expression: expression • OROP logical_or

    IS    shift, and go to state 71
    OROP  shift, and go to state 59


State 55

   22 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   34 expression: expression • OROP logical_or

    THEN  shift, and go to state 72
    OROP  shift, and go to state 59


State 56

   34 expression: expression • OROP logical_or
   49 primary: '(' expression • ')'

    OROP  shift, and go to state 59
    ')'   shift, and go to state 73


State 57

   28 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 74


State 58

   18 statement_: statement ';' •

    $default  reduce using rule 18 (statement_)


State 59

   34 expression: expression OROP • logical_or

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 29

    logical_or    go to state 75
    relation      go to state 34
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 60

   36 logical_or: logical_or ANDOP • relation

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 29

    relation      go to state 76
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 61

   38 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 29

    term          go to state 77
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 62

   40 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 29

    factor        go to state 78
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 63

   42 factor: factor MULOP • exponent

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 29

    exponent      go to state 79
    not_operator  go to state 38
    primary       go to state 39


State 64

   43 factor: factor REMOP • exponent

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 29

    exponent      go to state 80
    not_operator  go to state 38
    primary       go to state 39


State 65

   46 exponent: not_operator EXPOP • exponent

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    '('           shift, and go to state 29

    exponent      go to state 81
    not_operator  go to state 38
    primary       go to state 39


State 66

   14 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 14 (parameter)


State 67

    4 function_header: FUNCTION IDENTIFIER parameters_o RETURNS type • ';'

    ';'  shift, and go to state 82


State 68

   12 optional_params: optional_params ',' parameter •

    $default  reduce using rule 12 (optional_params)


State 69

    9 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_    go to state 83
    statement     go to state 31
    expression    go to state 32
    logical_or    go to state 33
    relation      go to state 34
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 70

   21 statement: REDUCE operator reductions • ENDREDUCE
   32 reductions: reductions • statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    ENDREDUCE     shift, and go to state 84
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_    go to state 85
    statement     go to state 31
    expression    go to state 32
    logical_or    go to state 33
    relation      go to state 34
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 71

   23 statement: CASE expression IS • case_optional OTHERS ARROW statement_ ENDCASE

    error  shift, and go to state 86
    WHEN   shift, and go to state 87

    case_optional  go to state 88
    case           go to state 89


State 72

   22 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_    go to state 90
    statement     go to state 31
    expression    go to state 32
    logical_or    go to state 33
    relation      go to state 34
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 73

   49 primary: '(' expression ')' •

    $default  reduce using rule 49 (primary)


State 74

   28 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 28 (body)


State 75

   34 expression: expression OROP logical_or •
   36 logical_or: logical_or • ANDOP relation

    ANDOP  shift, and go to state 60

    $default  reduce using rule 34 (expression)


State 76

   36 logical_or: logical_or ANDOP relation •
   38 relation: relation • RELOP term

    RELOP  shift, and go to state 61

    $default  reduce using rule 36 (logical_or)


State 77

   38 relation: relation RELOP term •
   40 term: term • ADDOP factor

    ADDOP  shift, and go to state 62

    $default  reduce using rule 38 (relation)


State 78

   40 term: term ADDOP factor •
   42 factor: factor • MULOP exponent
   43       | factor • REMOP exponent

    MULOP  shift, and go to state 63
    REMOP  shift, and go to state 64

    $default  reduce using rule 40 (term)


State 79

   42 factor: factor MULOP exponent •

    $default  reduce using rule 42 (factor)


State 80

   43 factor: factor REMOP exponent •

    $default  reduce using rule 43 (factor)


State 81

   46 exponent: not_operator EXPOP exponent •

    $default  reduce using rule 46 (exponent)


State 82

    4 function_header: FUNCTION IDENTIFIER parameters_o RETURNS type ';' •

    $default  reduce using rule 4 (function_header)


State 83

    9 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 9 (variable)


State 84

   21 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 21 (statement)


State 85

   32 reductions: reductions statement_ •

    $default  reduce using rule 32 (reductions)


State 86

   26 case_optional: error • ';'

    ';'  shift, and go to state 91


State 87

   27 case: WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 92


State 88

   23 statement: CASE expression IS case_optional • OTHERS ARROW statement_ ENDCASE
   24 case_optional: case_optional • case

    WHEN    shift, and go to state 87
    OTHERS  shift, and go to state 93

    case  go to state 94


State 89

   25 case_optional: case •

    $default  reduce using rule 25 (case_optional)


State 90

   22 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 95


State 91

   26 case_optional: error ';' •

    $default  reduce using rule 26 (case_optional)


State 92

   27 case: WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 96


State 93

   23 statement: CASE expression IS case_optional OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 97


State 94

   24 case_optional: case_optional case •

    $default  reduce using rule 24 (case_optional)


State 95

   22 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_    go to state 98
    statement     go to state 31
    expression    go to state 32
    logical_or    go to state 33
    relation      go to state 34
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 96

   27 case: WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_    go to state 99
    statement     go to state 31
    expression    go to state 32
    logical_or    go to state 33
    relation      go to state 34
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 97

   23 statement: CASE expression IS case_optional OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    NOTOP         shift, and go to state 23
    REAL_LITERAL  shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    REDUCE        shift, and go to state 26
    CASE          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_    go to state 100
    statement     go to state 31
    expression    go to state 32
    logical_or    go to state 33
    relation      go to state 34
    term          go to state 35
    factor        go to state 36
    exponent      go to state 37
    not_operator  go to state 38
    primary       go to state 39


State 98

   22 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 101


State 99

   27 case: WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 27 (case)


State 100

   23 statement: CASE expression IS case_optional OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 102


State 101

   22 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 22 (statement)


State 102

   23 statement: CASE expression IS case_optional OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 23 (statement)
